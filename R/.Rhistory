xp$Jday <- xp$JDAY * 365
xp$Tssr <- xp$TSSR * 24
Xp <- model.matrix(~., xp)
colnames(Xp)[1] <- "INTERCEPT"
Xp <- Xp[,names(cfi$sra),drop=FALSE]
lphi1 <- drop(Xp %*% cfi$sra)
pcf1 <- mvrnorm(R, cfi$sra, vci$sra)
#lphipi1 <- t(apply(apply(pcf1, 1, function(z) drop(Xp %*% z)),
#    1, quantile, prob))
#px <- cbind(est=exp(lphi1), exp(lphipi1))
pmat <- matrix(exp(lphi1), length(jd), length(ts))
pmax <- sra_fun(10, max(exp(lphi1)))
if (getBAMversion() < 3) {
lc <- seq(1, 5, 1)
tr <- seq(0, 1, 0.01)
xq <- expand.grid(LCC=as.factor(lc),
TREE=tr)
} else {
lc <- seq(1, 5, 1) # WNALC
tr <- seq(0, 1, 0.1)
xq <- expand.grid(WNALC=as.factor(lc),
TREE=tr)
xq$CTREE <- factor("Open", c("Open","Sparse","Dense"))
xq$CTREE[xq$TREE > 0.25] <- "Sparse"
xq$CTREE[xq$TREE > 0.60] <- "Dense"
levels(xq$WNALC) <- c("Conif",
"Open",
"Decid",
"Mixed",
"Wet")
xq$NALC <- xq$WNALC
levels(xq$NALC)[levels(xq$NALC) == "Wet"] <- "Open"
xq$WNALCTREE <- factor(NA, c("ConifDense",
"Open",
"ConifSparse",
"DecidDense",
"DecidSparse",
"MixedDense",
"MixedSparse",
"Wet"))
xq$WNALCTREE[xq$WNALC == "Open"] <- "Open"
xq$WNALCTREE[xq$WNALC == "Wet"] <- "Wet"
xq$WNALCTREE[xq$WNALC != "Wet" & xq$TREE <= 0.25] <- "Open"
xq$WNALCTREE[xq$WNALC == "Conif" & xq$TREE > 0.25] <- "ConifSparse"
xq$WNALCTREE[xq$WNALC == "Decid" & xq$TREE > 0.25] <- "DecidSparse"
xq$WNALCTREE[xq$WNALC == "Mixed" & xq$TREE > 0.25] <- "MixedSparse"
xq$WNALCTREE[xq$WNALC == "Conif" & xq$TREE > 0.60] <- "ConifDense"
xq$WNALCTREE[xq$WNALC == "Decid" & xq$TREE > 0.60] <- "DecidDense"
xq$WNALCTREE[xq$WNALC == "Mixed" & xq$TREE > 0.60] <- "MixedDense"
xq$NALCTREE <- xq$WNALCTREE
levels(xq$NALCTREE)[levels(xq$NALCTREE) == "Wet"] <- "Open"
}
Xq <- model.matrix(~., xq)
colnames(Xq)[1] <- "INTERCEPT"
Xq <- Xq[,names(cfi$edr),drop=FALSE]
ltau1 <- drop(Xq %*% cfi$edr)
pcf1 <- mvrnorm(R, cfi$edr, vci$edr)
#ltaupi1 <- t(apply(apply(pcf1, 1, function(z) drop(Xq %*% z)),
#    1, quantile, prob))
#qx <- cbind(est=exp(ltau1), exp(ltaupi1))
qmat <- matrix(exp(ltau1), length(lc), length(tr))
qmax <- edr_fun(0.5, max(exp(ltau1)))
#library(lattice)
#levelplot(px[,1] ~ Jday * Tssr, xp)
op <- par(las=1, mfrow=c(3,2))
barplot(wp, space=0, col=grey(1-wp), border="grey", ylim=c(0,1),
main=paste0(spp, " (n=", nsra, ") v", getBAMversion()),
ylab="Model weight", xlab="Model ID")
barplot(wq, space=0, col=grey(1-wq), border="grey", ylim=c(0,1),
main=paste0(spp, " (n=", nedr, ") v", getBAMversion()),
ylab="Model weight", xlab="Model ID")
plot(t, p[,1], type="n", ylim=c(0,1),
xlab="Point count duration (min)",
ylab="Probability of singing")
polygon(c(t, rev(t)), c(p[,2], rev(p[,3])),
col="grey", border="grey")
lines(t, p[,1], col=1, lwd=2)
plot(r*100, q[,1], type="n", ylim=c(0,1),
xlab="Point count radius (m)",
ylab="Probability of singing")
polygon(100*c(r, rev(r)), c(q[,2], rev(q[,3])),
col="grey", border="grey")
lines(r*100, q[,1], col=1, lwd=2)
image(jd*365, ts*24, pmat,
col = rev(grey(seq(0, pmax, len=12))),
xlab="Julian days", ylab="Hours since sunrise",
main=paste("Best model:", mi$sra))
image(lc, tr*100, qmat,
col = rev(grey(seq(0, qmax, len=12))), axes=FALSE,
xlab="Land cover types", ylab="Percent tree cover",
main=paste("Best model:", mi$edr))
axis(1, 1:5, levels(xq$WNALC))
axis(2)
box()
par(op)
}
dev.off()
rm(list=ls())
library(detect)
load_BAM_QPAD(1)
.BAMCOEFS$version
load("~/Dropbox/bam/qpad_v3/BAMCOEFS_QPAD_v3.rda")
.BAMCOEFS$version
R <- 1000
#spp <- "OVEN"
level <- 0.9
prob <- c(0, 1) + c(1, -1) * ((1-level)/2)
library(MASS)
pdf(paste0("~/Dropbox/bam/qpad_v3/QPAD_res_v",
getBAMversion(),".pdf"), onefile=TRUE, width=8, height=12)
for (spp in getBAMspecieslist()) {
cat(spp, "\n");flush.console()
## model weights
wp <- selectmodelBAMspecies(spp)$sra$weights
wq <- selectmodelBAMspecies(spp)$edr$weights
names(wp) <- names(wq) <- rownames(selectmodelBAMspecies(spp)$edr)
nsra <- selectmodelBAMspecies(spp)$sra$nobs[1]
nedr <- selectmodelBAMspecies(spp)$edr$nobs[1]
## constant model
lphi0 <- coefBAMspecies(spp, 0, 0)$sra
lphise0 <- sqrt(vcovBAMspecies(spp, 0, 0)$sra[1])
#lphipi0 <- quantile(rnorm(R, lphi0, lphise0), prob)
t <- seq(0, 10, 0.1)
p <- cbind(est=sra_fun(t, exp(lphi0)))#,
#           pi1=sra_fun(t, exp(lphipi0[1])),
#           pi2=sra_fun(t, exp(lphipi0[2])))
ltau0 <- coefBAMspecies(spp, 0, 0)$edr
ltause0 <- sqrt(vcovBAMspecies(spp, 0, 0)$edr[1])
#ltaupi0 <- quantile(rnorm(R, ltau0, ltause0), prob)
r <- seq(0, 4, 0.05)
q <- cbind(est=edr_fun(r, exp(ltau0)))#,
#           pi1=edr_fun(r, exp(ltaupi0[1])),
#           pi2=edr_fun(r, exp(ltaupi0[2])))
## covariate effects
mi <- bestmodelBAMspecies(spp)
cfi <- coefBAMspecies(spp, mi$sra, mi$edr)
vci <- vcovBAMspecies(spp, mi$sra, mi$edr)
jd <- seq(0.3, 0.7, 0.01)
ts <- seq(-0.2, 0.4, 0.01)
xp <- expand.grid(JDAY=jd, # ---------- CHECK !!!
TSSR=ts)
xp$JDAY2 <- xp$JDAY^2
xp$TSSR2 <- xp$TSSR^2
xp$Jday <- xp$JDAY * 365
xp$Tssr <- xp$TSSR * 24
Xp <- model.matrix(~., xp)
colnames(Xp)[1] <- "INTERCEPT"
Xp <- Xp[,names(cfi$sra),drop=FALSE]
lphi1 <- drop(Xp %*% cfi$sra)
pcf1 <- mvrnorm(R, cfi$sra, vci$sra)
#lphipi1 <- t(apply(apply(pcf1, 1, function(z) drop(Xp %*% z)),
#    1, quantile, prob))
#px <- cbind(est=exp(lphi1), exp(lphipi1))
pmat <- matrix(exp(lphi1), length(jd), length(ts))
pmax <- sra_fun(10, max(exp(lphi1)))
if (getBAMversion() < 3) {
lc <- seq(1, 5, 1)
tr <- seq(0, 1, 0.01)
xq <- expand.grid(LCC=as.factor(lc),
TREE=tr)
} else {
lc <- seq(1, 5, 1) # WNALC
tr <- seq(0, 1, 0.1)
xq <- expand.grid(WNALC=as.factor(lc),
TREE=tr)
xq$CTREE <- factor("Open", c("Open","Sparse","Dense"))
xq$CTREE[xq$TREE > 0.25] <- "Sparse"
xq$CTREE[xq$TREE > 0.60] <- "Dense"
levels(xq$WNALC) <- c("Conif",
"Open",
"Decid",
"Mixed",
"Wet")
xq$NALC <- xq$WNALC
levels(xq$NALC)[levels(xq$NALC) == "Wet"] <- "Open"
xq$WNALCTREE <- factor(NA, c("ConifDense",
"Open",
"ConifSparse",
"DecidDense",
"DecidSparse",
"MixedDense",
"MixedSparse",
"Wet"))
xq$WNALCTREE[xq$WNALC == "Open"] <- "Open"
xq$WNALCTREE[xq$WNALC == "Wet"] <- "Wet"
xq$WNALCTREE[xq$WNALC != "Wet" & xq$TREE <= 0.25] <- "Open"
xq$WNALCTREE[xq$WNALC == "Conif" & xq$TREE > 0.25] <- "ConifSparse"
xq$WNALCTREE[xq$WNALC == "Decid" & xq$TREE > 0.25] <- "DecidSparse"
xq$WNALCTREE[xq$WNALC == "Mixed" & xq$TREE > 0.25] <- "MixedSparse"
xq$WNALCTREE[xq$WNALC == "Conif" & xq$TREE > 0.60] <- "ConifDense"
xq$WNALCTREE[xq$WNALC == "Decid" & xq$TREE > 0.60] <- "DecidDense"
xq$WNALCTREE[xq$WNALC == "Mixed" & xq$TREE > 0.60] <- "MixedDense"
xq$NALCTREE <- xq$WNALCTREE
levels(xq$NALCTREE)[levels(xq$NALCTREE) == "Wet"] <- "Open"
}
Xq <- model.matrix(~., xq)
colnames(Xq)[1] <- "INTERCEPT"
Xq <- Xq[,names(cfi$edr),drop=FALSE]
ltau1 <- drop(Xq %*% cfi$edr)
pcf1 <- mvrnorm(R, cfi$edr, vci$edr)
#ltaupi1 <- t(apply(apply(pcf1, 1, function(z) drop(Xq %*% z)),
#    1, quantile, prob))
#qx <- cbind(est=exp(ltau1), exp(ltaupi1))
qmat <- matrix(exp(ltau1), length(lc), length(tr))
qmax <- edr_fun(0.5, max(exp(ltau1)))
#library(lattice)
#levelplot(px[,1] ~ Jday * Tssr, xp)
op <- par(las=1, mfrow=c(3,2))
barplot(wp, space=0, col=grey(1-wp), border="grey", ylim=c(0,1),
main=paste0(spp, " (n=", nsra, ") v", getBAMversion()),
ylab="Model weight", xlab="Model ID")
barplot(wq, space=0, col=grey(1-wq), border="grey", ylim=c(0,1),
main=paste0(spp, " (n=", nedr, ") v", getBAMversion()),
ylab="Model weight", xlab="Model ID")
plot(t, p[,1], type="n", ylim=c(0,1),
xlab="Point count duration (min)",
ylab="Probability of singing")
#polygon(c(t, rev(t)), c(p[,2], rev(p[,3])),
#        col="grey", border="grey")
lines(t, p[,1], col=1, lwd=2)
plot(r*100, q[,1], type="n", ylim=c(0,1),
xlab="Point count radius (m)",
ylab="Probability of singing")
#polygon(100*c(r, rev(r)), c(q[,2], rev(q[,3])),
#        col="grey", border="grey")
lines(r*100, q[,1], col=1, lwd=2)
image(jd*365, ts*24, pmat,
col = rev(grey(seq(0, pmax, len=12))),
xlab="Julian days", ylab="Hours since sunrise",
main=paste("Best model:", mi$sra))
image(lc, tr*100, qmat,
col = rev(grey(seq(0, qmax, len=12))), axes=FALSE,
xlab="Land cover types", ylab="Percent tree cover",
main=paste("Best model:", mi$edr))
axis(1, 1:5, levels(xq$WNALC))
axis(2)
box()
par(op)
}
dev.off()
pdf(paste0("~/Dropbox/bam/qpad_v3/QPAD_res_v",
getBAMversion(),".pdf"), onefile=TRUE, width=8, height=12)
for (spp in getBAMspecieslist()) {
cat(spp, "\n");flush.console()
## model weights
wp <- selectmodelBAMspecies(spp)$sra$weights
wq <- selectmodelBAMspecies(spp)$edr$weights
names(wp) <- names(wq) <- rownames(selectmodelBAMspecies(spp)$edr)
nsra <- selectmodelBAMspecies(spp)$sra$nobs[1]
nedr <- selectmodelBAMspecies(spp)$edr$nobs[1]
## constant model
lphi0 <- coefBAMspecies(spp, 0, 0)$sra
#lphise0 <- sqrt(vcovBAMspecies(spp, 0, 0)$sra[1])
#lphipi0 <- quantile(rnorm(R, lphi0, lphise0), prob)
t <- seq(0, 10, 0.1)
p <- cbind(est=sra_fun(t, exp(lphi0)))#,
#           pi1=sra_fun(t, exp(lphipi0[1])),
#           pi2=sra_fun(t, exp(lphipi0[2])))
ltau0 <- coefBAMspecies(spp, 0, 0)$edr
#ltause0 <- sqrt(vcovBAMspecies(spp, 0, 0)$edr[1])
#ltaupi0 <- quantile(rnorm(R, ltau0, ltause0), prob)
r <- seq(0, 4, 0.05)
q <- cbind(est=edr_fun(r, exp(ltau0)))#,
#           pi1=edr_fun(r, exp(ltaupi0[1])),
#           pi2=edr_fun(r, exp(ltaupi0[2])))
## covariate effects
mi <- bestmodelBAMspecies(spp)
cfi <- coefBAMspecies(spp, mi$sra, mi$edr)
vci <- vcovBAMspecies(spp, mi$sra, mi$edr)
jd <- seq(0.3, 0.7, 0.01)
ts <- seq(-0.2, 0.4, 0.01)
xp <- expand.grid(JDAY=jd, # ---------- CHECK !!!
TSSR=ts)
xp$JDAY2 <- xp$JDAY^2
xp$TSSR2 <- xp$TSSR^2
xp$Jday <- xp$JDAY * 365
xp$Tssr <- xp$TSSR * 24
Xp <- model.matrix(~., xp)
colnames(Xp)[1] <- "INTERCEPT"
Xp <- Xp[,names(cfi$sra),drop=FALSE]
lphi1 <- drop(Xp %*% cfi$sra)
#pcf1 <- mvrnorm(R, cfi$sra, vci$sra)
#lphipi1 <- t(apply(apply(pcf1, 1, function(z) drop(Xp %*% z)),
#    1, quantile, prob))
#px <- cbind(est=exp(lphi1), exp(lphipi1))
pmat <- matrix(exp(lphi1), length(jd), length(ts))
pmax <- sra_fun(10, max(exp(lphi1)))
if (getBAMversion() < 3) {
lc <- seq(1, 5, 1)
tr <- seq(0, 1, 0.01)
xq <- expand.grid(LCC=as.factor(lc),
TREE=tr)
} else {
lc <- seq(1, 5, 1) # WNALC
tr <- seq(0, 1, 0.1)
xq <- expand.grid(WNALC=as.factor(lc),
TREE=tr)
xq$CTREE <- factor("Open", c("Open","Sparse","Dense"))
xq$CTREE[xq$TREE > 0.25] <- "Sparse"
xq$CTREE[xq$TREE > 0.60] <- "Dense"
levels(xq$WNALC) <- c("Conif",
"Open",
"Decid",
"Mixed",
"Wet")
xq$NALC <- xq$WNALC
levels(xq$NALC)[levels(xq$NALC) == "Wet"] <- "Open"
xq$WNALCTREE <- factor(NA, c("ConifDense",
"Open",
"ConifSparse",
"DecidDense",
"DecidSparse",
"MixedDense",
"MixedSparse",
"Wet"))
xq$WNALCTREE[xq$WNALC == "Open"] <- "Open"
xq$WNALCTREE[xq$WNALC == "Wet"] <- "Wet"
xq$WNALCTREE[xq$WNALC != "Wet" & xq$TREE <= 0.25] <- "Open"
xq$WNALCTREE[xq$WNALC == "Conif" & xq$TREE > 0.25] <- "ConifSparse"
xq$WNALCTREE[xq$WNALC == "Decid" & xq$TREE > 0.25] <- "DecidSparse"
xq$WNALCTREE[xq$WNALC == "Mixed" & xq$TREE > 0.25] <- "MixedSparse"
xq$WNALCTREE[xq$WNALC == "Conif" & xq$TREE > 0.60] <- "ConifDense"
xq$WNALCTREE[xq$WNALC == "Decid" & xq$TREE > 0.60] <- "DecidDense"
xq$WNALCTREE[xq$WNALC == "Mixed" & xq$TREE > 0.60] <- "MixedDense"
xq$NALCTREE <- xq$WNALCTREE
levels(xq$NALCTREE)[levels(xq$NALCTREE) == "Wet"] <- "Open"
}
Xq <- model.matrix(~., xq)
colnames(Xq)[1] <- "INTERCEPT"
Xq <- Xq[,names(cfi$edr),drop=FALSE]
ltau1 <- drop(Xq %*% cfi$edr)
#pcf1 <- mvrnorm(R, cfi$edr, vci$edr)
#ltaupi1 <- t(apply(apply(pcf1, 1, function(z) drop(Xq %*% z)),
#    1, quantile, prob))
#qx <- cbind(est=exp(ltau1), exp(ltaupi1))
qmat <- matrix(exp(ltau1), length(lc), length(tr))
qmax <- edr_fun(0.5, max(exp(ltau1)))
#library(lattice)
#levelplot(px[,1] ~ Jday * Tssr, xp)
op <- par(las=1, mfrow=c(3,2))
barplot(wp, space=0, col=grey(1-wp), border="grey", ylim=c(0,1),
main=paste0(spp, " (n=", nsra, ") v", getBAMversion()),
ylab="Model weight", xlab="Model ID")
barplot(wq, space=0, col=grey(1-wq), border="grey", ylim=c(0,1),
main=paste0(spp, " (n=", nedr, ") v", getBAMversion()),
ylab="Model weight", xlab="Model ID")
plot(t, p[,1], type="n", ylim=c(0,1),
xlab="Point count duration (min)",
ylab="Probability of singing")
#polygon(c(t, rev(t)), c(p[,2], rev(p[,3])),
#        col="grey", border="grey")
lines(t, p[,1], col=1, lwd=2)
plot(r*100, q[,1], type="n", ylim=c(0,1),
xlab="Point count radius (m)",
ylab="Probability of singing")
#polygon(100*c(r, rev(r)), c(q[,2], rev(q[,3])),
#        col="grey", border="grey")
lines(r*100, q[,1], col=1, lwd=2)
image(jd*365, ts*24, pmat,
col = rev(grey(seq(0, pmax, len=12))),
xlab="Julian days", ylab="Hours since sunrise",
main=paste("Best model:", mi$sra))
image(lc, tr*100, qmat,
col = rev(grey(seq(0, qmax, len=12))), axes=FALSE,
xlab="Land cover types", ylab="Percent tree cover",
main=paste("Best model:", mi$edr))
axis(1, 1:5, levels(xq$WNALC))
axis(2)
box()
par(op)
}
dev.off()
load_BAM_QPAD(1)
.BAMCOEFS$version
pdf(paste0("~/Dropbox/bam/qpad_v3/QPAD_res_v",
getBAMversion(),".pdf"), onefile=TRUE, width=8, height=12)
for (spp in getBAMspecieslist()) {
cat(spp, "\n");flush.console()
## model weights
wp <- selectmodelBAMspecies(spp)$sra$weights
wq <- selectmodelBAMspecies(spp)$edr$weights
names(wp) <- names(wq) <- rownames(selectmodelBAMspecies(spp)$edr)
nsra <- selectmodelBAMspecies(spp)$sra$nobs[1]
nedr <- selectmodelBAMspecies(spp)$edr$nobs[1]
## constant model
lphi0 <- coefBAMspecies(spp, 0, 0)$sra
#lphise0 <- sqrt(vcovBAMspecies(spp, 0, 0)$sra[1])
#lphipi0 <- quantile(rnorm(R, lphi0, lphise0), prob)
t <- seq(0, 10, 0.1)
p <- cbind(est=sra_fun(t, exp(lphi0)))#,
#           pi1=sra_fun(t, exp(lphipi0[1])),
#           pi2=sra_fun(t, exp(lphipi0[2])))
ltau0 <- coefBAMspecies(spp, 0, 0)$edr
#ltause0 <- sqrt(vcovBAMspecies(spp, 0, 0)$edr[1])
#ltaupi0 <- quantile(rnorm(R, ltau0, ltause0), prob)
r <- seq(0, 4, 0.05)
q <- cbind(est=edr_fun(r, exp(ltau0)))#,
#           pi1=edr_fun(r, exp(ltaupi0[1])),
#           pi2=edr_fun(r, exp(ltaupi0[2])))
## covariate effects
mi <- bestmodelBAMspecies(spp)
cfi <- coefBAMspecies(spp, mi$sra, mi$edr)
vci <- vcovBAMspecies(spp, mi$sra, mi$edr)
jd <- seq(0.3, 0.7, 0.01)
ts <- seq(-0.2, 0.4, 0.01)
xp <- expand.grid(JDAY=jd, # ---------- CHECK !!!
TSSR=ts)
xp$JDAY2 <- xp$JDAY^2
xp$TSSR2 <- xp$TSSR^2
xp$Jday <- xp$JDAY * 365
xp$Tssr <- xp$TSSR * 24
Xp <- model.matrix(~., xp)
colnames(Xp)[1] <- "INTERCEPT"
Xp <- Xp[,names(cfi$sra),drop=FALSE]
lphi1 <- drop(Xp %*% cfi$sra)
#pcf1 <- mvrnorm(R, cfi$sra, vci$sra)
#lphipi1 <- t(apply(apply(pcf1, 1, function(z) drop(Xp %*% z)),
#    1, quantile, prob))
#px <- cbind(est=exp(lphi1), exp(lphipi1))
pmat <- matrix(exp(lphi1), length(jd), length(ts))
pmax <- sra_fun(10, max(exp(lphi1)))
if (getBAMversion() < 3) {
lc <- seq(1, 5, 1)
tr <- seq(0, 1, 0.01)
xq <- expand.grid(LCC=as.factor(lc),
TREE=tr)
} else {
lc <- seq(1, 5, 1) # WNALC
tr <- seq(0, 1, 0.1)
xq <- expand.grid(WNALC=as.factor(lc),
TREE=tr)
xq$CTREE <- factor("Open", c("Open","Sparse","Dense"))
xq$CTREE[xq$TREE > 0.25] <- "Sparse"
xq$CTREE[xq$TREE > 0.60] <- "Dense"
levels(xq$WNALC) <- c("Conif",
"Open",
"Decid",
"Mixed",
"Wet")
xq$NALC <- xq$WNALC
levels(xq$NALC)[levels(xq$NALC) == "Wet"] <- "Open"
xq$WNALCTREE <- factor(NA, c("ConifDense",
"Open",
"ConifSparse",
"DecidDense",
"DecidSparse",
"MixedDense",
"MixedSparse",
"Wet"))
xq$WNALCTREE[xq$WNALC == "Open"] <- "Open"
xq$WNALCTREE[xq$WNALC == "Wet"] <- "Wet"
xq$WNALCTREE[xq$WNALC != "Wet" & xq$TREE <= 0.25] <- "Open"
xq$WNALCTREE[xq$WNALC == "Conif" & xq$TREE > 0.25] <- "ConifSparse"
xq$WNALCTREE[xq$WNALC == "Decid" & xq$TREE > 0.25] <- "DecidSparse"
xq$WNALCTREE[xq$WNALC == "Mixed" & xq$TREE > 0.25] <- "MixedSparse"
xq$WNALCTREE[xq$WNALC == "Conif" & xq$TREE > 0.60] <- "ConifDense"
xq$WNALCTREE[xq$WNALC == "Decid" & xq$TREE > 0.60] <- "DecidDense"
xq$WNALCTREE[xq$WNALC == "Mixed" & xq$TREE > 0.60] <- "MixedDense"
xq$NALCTREE <- xq$WNALCTREE
levels(xq$NALCTREE)[levels(xq$NALCTREE) == "Wet"] <- "Open"
}
Xq <- model.matrix(~., xq)
colnames(Xq)[1] <- "INTERCEPT"
Xq <- Xq[,names(cfi$edr),drop=FALSE]
ltau1 <- drop(Xq %*% cfi$edr)
#pcf1 <- mvrnorm(R, cfi$edr, vci$edr)
#ltaupi1 <- t(apply(apply(pcf1, 1, function(z) drop(Xq %*% z)),
#    1, quantile, prob))
#qx <- cbind(est=exp(ltau1), exp(ltaupi1))
qmat <- matrix(exp(ltau1), length(lc), length(tr))
qmax <- edr_fun(0.5, max(exp(ltau1)))
#library(lattice)
#levelplot(px[,1] ~ Jday * Tssr, xp)
op <- par(las=1, mfrow=c(3,2))
barplot(wp, space=0, col=grey(1-wp), border="grey", ylim=c(0,1),
main=paste0(spp, " (n=", nsra, ") v", getBAMversion()),
ylab="Model weight", xlab="Model ID")
barplot(wq, space=0, col=grey(1-wq), border="grey", ylim=c(0,1),
main=paste0(spp, " (n=", nedr, ") v", getBAMversion()),
ylab="Model weight", xlab="Model ID")
plot(t, p[,1], type="n", ylim=c(0,1),
xlab="Point count duration (min)",
ylab="Probability of singing")
#polygon(c(t, rev(t)), c(p[,2], rev(p[,3])),
#        col="grey", border="grey")
lines(t, p[,1], col=1, lwd=2)
plot(r*100, q[,1], type="n", ylim=c(0,1),
xlab="Point count radius (m)",
ylab="Probability of singing")
#polygon(100*c(r, rev(r)), c(q[,2], rev(q[,3])),
#        col="grey", border="grey")
lines(r*100, q[,1], col=1, lwd=2)
image(jd*365, ts*24, pmat,
col = rev(grey(seq(0, pmax, len=12))),
xlab="Julian days", ylab="Hours since sunrise",
main=paste("Best model:", mi$sra))
image(lc, tr*100, qmat,
col = rev(grey(seq(0, qmax, len=12))), axes=FALSE,
xlab="Land cover types", ylab="Percent tree cover",
main=paste("Best model:", mi$edr))
axis(1, 1:5, levels(xq$WNALC))
axis(2)
box()
par(op)
}
dev.off()
exp(ltau0)
plot(r*100, q[,1], type="n", ylim=c(0,1),
xlab="Point count radius (m)",
ylab="Probability of singing")
abline(v=exp(ltau0)*100, lty=2)
lines(r*100, q[,1], col=1, lwd=2)
